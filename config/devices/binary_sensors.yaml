  - platform: template
    sensors:
      martine_vertrekt_naart_werk:
        friendly_name: Martine moet vertrekken
        value_template: "{{ (as_timestamp(states.calendar.monnikenheide_google.attributes.start_time) - as_timestamp(strptime(states.sensor.date__time.state, '%Y-%m-%d, %H:%M')) |  float > 600)
              and (as_timestamp(states.calendar.monnikenheide_google.attributes.start_time) - as_timestamp(strptime(states.sensor.date__time.state, '%Y-%m-%d, %H:%M')) | float < 4200) }}"

      giel_vertrekt_naart_werk:
        friendly_name: Giel moet vertrekken
        value_template: "{{ (as_timestamp(states.calendar.vroege.attributes.start_time) - as_timestamp(strptime(states.sensor.date__time.state, '%Y-%m-%d, %H:%M')) |  float > 1800)
              and (as_timestamp(states.calendar.vroege.attributes.start_time) - as_timestamp(strptime(states.sensor.date__time.state, '%Y-%m-%d, %H:%M')) | float < 4200) }}"

      afkoeling_gewenst:
        friendly_name: Afkoeling
        value_template: "{{ is_state('sensor.binnen_vs_buiten', 'Afkoeling') }}"
        icon_template: >-
            {% if is_state('sensor.binnen_vs_buiten', 'Afkoeling') %}
                 mdi:fan
            {% else %}
                 mdi:fan-off
            {% endif %}

      binnen_warm:
        device_class: heat
        friendly_name: Binnen heet
        value_template: "{{ states('sensor.binnen_lowpass') | float > 26 }}"

      buiten_warm:
        device_class: heat
        friendly_name: Buiten heet
        value_template: "{{ states('sensor.buiten_lowpass') | float > 25 }}"

      buiten_fris_genoeg:
        device_class: cold
        friendly_name: Buiten aangenaam
        value_template: "{{ states('sensor.buiten_lowpass')Â | float < 25 }}"

      v_vroege:
        # value_template: "{{as_timestamp(states.calendar.vroege.attributes.start_time) - as_timestamp(now()) | float < 21610}}"
        value_template: "{{as_timestamp(states.calendar.vroege.attributes.start_time) - as_timestamp(strptime(states.sensor.date__time.state, '%Y-%m-%d, %H:%M')) | float < 21610}}"

      v_late:
        # value_template: "{{as_timestamp(states.calendar.late.attributes.start_time) - as_timestamp(now()) | float < 50410}}"
        value_template: "{{as_timestamp(states.calendar.late.attributes.start_time) - as_timestamp(strptime(states.sensor.date__time.state, '%Y-%m-%d, %H:%M')) | float < 50410}}"

      v_nacht:
        # value_template: "{{as_timestamp(states.calendar.nacht.attributes.start_time) - as_timestamp(now()) | float < 79210}}"
        value_template: "{{as_timestamp(states.calendar.nacht.attributes.start_time) - as_timestamp(strptime(states.sensor.date__time.state, '%Y-%m-%d, %H:%M')) | float < 79210}}"

      v_w_nacht:
        # value_template: "{{as_timestamp(states.calendar.w_nacht.attributes.start_time) - as_timestamp(now()) | float < 64810}}"
        value_template: "{{as_timestamp(states.calendar.w_nacht.attributes.start_time) - as_timestamp(strptime(states.sensor.date__time.state, '%Y-%m-%d, %H:%M')) | float < 64810}}"

      v_w_dag:
        value_template: "{{as_timestamp(states.calendar.w_dag.attributes.start_time) - as_timestamp(strptime(states.sensor.date__time.state, '%Y-%m-%d, %H:%M')) | float < 21610}}"

      # m_vroege:
      #   value_template: "{{as_timestamp(states.calendar.vroege.attributes.start_time) - as_timestamp(now()) | float < 108000}}"
      #
      # m_late:
      #   value_template: "{{as_timestamp(states.calendar.late.attributes.start_time) - as_timestamp(now()) | float < 136800}}"
      #
      # m_nacht:
      #   value_template: "{{as_timestamp(states.calendar.nacht.attributes.start_time) - as_timestamp(now()) | float < 165600}}"
      #
      # m_w_nacht:
      #   value_template: "{{as_timestamp(states.calendar.w_nacht.attributes.start_time) - as_timestamp(now()) | float < 165600}}"
      #
      # m_w_dag:
      #   value_template: "{{as_timestamp(states.calendar.w_dag.attributes.start_time) - as_timestamp(now()) | float < 108000}}"
      #
      v_monnikenheide:
        # value_template: "{{as_timestamp(states.calendar.monnikenheide.attributes.start_time) - as_timestamp(now()) | float < 28810}}"
        value_template: "{{as_timestamp(states.calendar.monnikenheide_google.attributes.start_time) - as_timestamp(strptime(states.sensor.date__time.state, '%Y-%m-%d, %H:%M')) | float < 28810}}"

      # m_monnikenheide:
      #   value_template: "{{as_timestamp(states.calendar.monnikenheide.attributes.start_time) - as_timestamp(now()) | float < 113040}}"

      v_werken:
        value_template: "{{ is_state('binary_sensor.v_late', 'on')
               or is_state('calendar.monnikenheide_google', 'on')
               or is_state('calendar.vroege', 'on')
               or is_state('calendar.late', 'on')
               or is_state('calendar.w_dag', 'on')
               or is_state('binary_sensor.v_monnikenheide', 'on')
               or is_state('binary_sensor.v_vroege', 'on')
               or is_state('binary_sensor.v_w_dag', 'on') }}"

      schooldag:
        value_template: "{{ is_state('calendar.schoolvakanties', 'off') }}"

      volk_in_den_hof_homekit:
        device_class: motion
        value_template: "{{ is_state('input_boolean.volk_in_den_hof_homekit', 'on')
                or is_state('binary_sensor.presence_licht_aan', 'on') }}"

      dier_in_den_hof:
        device_class: motion
        value_template: "{{ is_state('binary_sensor.den_hof_outdoor_animal', 'on')
                or is_state('input_boolean.dier_in_den_hof', 'on')
                or is_state('binary_sensor.nummer_79__den_hof_outdoor_animal', 'on') }}"

      auto_in_den_hof:
        device_class: motion
        value_template: "{{ is_state('binary_sensor.den_hof_outdoor_vehicle', 'on')
                or is_state('input_boolean.auto_in_den_hof', 'on')
                or is_state('binary_sensor.nummer_79__den_hof_outdoor_vehicle', 'on') }}"

      presence_licht_aan:
        device_class: light
        value_template: "{{ is_state('input_boolean.presence_licht_aan', 'on') }}"

      verluchting_afkoeling:
        device_class: cold
        value_template: "{{ is_state('input_boolean.verluchting_afkoeling', 'on') }}"

  - platform: iss

  - platform: netatmo
    home: Nummer 79
    cameras:
      - Den Hof
    presence_sensors:
      - Outdoor human
      - Outdoor animal
      - Outdoor vehicle
    welcome_sensors:
      - Someone known
      - Someone unknown
      - Motion

  # - platform: device_tracker_sensor
  #   entities:
  #     - device_tracker.garage_mint
  #     - device_tracker.noorpad
  #     - device_tracker.fienpad
  #     - device_tracker.macbook
  #     - device_tracker.mphone
