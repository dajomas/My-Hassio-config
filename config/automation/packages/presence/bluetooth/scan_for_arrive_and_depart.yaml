  alias: Scan for arrive and depart
  initial_state: 'on' 
  trigger:
    - platform: homeassistant
      event: start
    - platform: state
      entity_id: binary_sensor.entity_id_for_bt_scanning
      to: 'on'
    # - platform: state
    #   entity_id: binary_sensor.beweging_fotocel
    #   to: 'on'
    # - platform: state
    #   entity_id: binary_sensor.giel_bayesian_on_bluetooth_off
    #   to: 'on'
    # - platform: state
    #   entity_id: binary_sensor.martine_bayesian_on_bluetooth_off
    #   to: 'on'
    # - platform: state
    #   entity_id: binary_sensor.giel_bayesian_off_bluetooth_on
    #   to: 'on'
    # - platform: state
    #   entity_id: binary_sensor.martine_bayesian_off_bluetooth_on
    #   to: 'on'
    # - platform: state
    #   entity_id: binary_sensor.netatmo_webhook_trigger
    #   to: 'on'
    # - platform: state
    #   entity_id: binary_sensor.den_hof_outdoor_human
    #   to: 'on'
    # - platform: state
    #   entity_id: binary_sensor.volk_in_den_hof_homekit
    #   to: 'on'
    # - platform: state
    #   entity_id: binary_sensor.voordeur_open
    # - platform: state
    #   entity_id: binary_sensor.achterdeur_open
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{as_timestamp(now()) - as_timestamp(state_attr('automation.scan_for_arrive_and_depart', 'last_triggered')) | float > 45 }}"
  action:
    - service_template: >
        {% if is_state('script.mqtt_arrive_depart_script', 'on') %}
           script.turn_off
        {% else %}
           script.turn_on
        {% endif %}
      data_template:
        entity_id: >
          {% if is_state('script.mqtt_arrive_depart_script', 'on') %}
             script.mqtt_arrive_depart_script
          {% else %}
             script.dummy
          {% endif %}
    - wait_template: "{{ is_state('script.dummy', 'off') }}"
    - service: script.mqtt_arrive_depart_script
      data_template:
        identity: >
          {% if trigger.platform == 'state' %}  
             {"identity":"{{trigger.entity_id.split(".")[1]}} {{now().strftime("%H:%M")}}"}
          {% else %}
             {"identity":"HA-start {{now().strftime("%H:%M")}}"}
          {% endif %}