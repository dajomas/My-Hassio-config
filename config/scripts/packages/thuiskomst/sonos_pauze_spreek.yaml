  sonos_pauze_spreek:
    sequence:
      - condition: and
        conditions:
          - condition: template
            value_template: "{{as_timestamp(now()) - as_timestamp(state_attr('script.sonos_pauze_spreek', 'last_triggered')) | float > 10 }}"
      - wait_template: "{{ states.script.begroeting_paused.state == 'off' }}"
        timeout: '00:01:00'
        continue_on_timeout: 'false'
      - service: media_player.sonos_snapshot
        data_template:
          entity_id: "{{ sonos_entity }}"
      - delay: '00:00:02'
      - service: media_player.volume_set
        data_template:
          entity_id: "{{ sonos_entity }}"
          volume_level: "{{ volume }}"
      # - service: tts.voicerss_say
      - service: tts.google_say
        data_template:
          entity_id: "{{ sonos_entity }}"
          message: "{{ message }}"
      - delay: "{{ delay }}"
      - service: media_player.sonos_restore
        data_template:
          entity_id: "{{ sonos_entity }}"
      - delay: '00:00:05'
      - condition: and
        conditions:
          - condition: state
            entity_id: media_player.philips_tv
            state: 'off'
          - condition: state
            entity_id: media_player.philips_tv_wifi
            state: 'off'
          - condition: state
            entity_id: media_player.vsx_921
            state: 'off'
          - condition: state
            entity_id: binary_sensor.v_w_nacht
            state: 'off'
          - condition: state
            entity_id: binary_sensor.v_nacht
            state: 'off'
          - condition: template
            value_template: "{{states('alarm_control_panel.ha_alarm')  != 'armed_night' }}"
          # - condition: template
          #   value_template: "{{ state_attr('media_player.keuken', 'media_artist') != 'nl-nl' }}"
          - condition: or
            conditions:
              - condition: template
                value_template: "{{ state_attr('media_player.keuken', 'media_artist') != 'nl-nl' }}"
              - condition: template
                value_template: "{{ state_attr('media_player.keuken', 'media_artist') != 'nl' }}"
      - service: media_player.media_play
        data_template:
          entity_id: "{{ sonos_entity }}"

